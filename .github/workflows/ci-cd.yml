name: CI/CD PyPI Release

on:
  push:
    tags:
      - '*.*.*'
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          pip install poetry

      - name: Set version from tag (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          poetry version $TAG_VERSION

      - name: Set version from last tag (if not tag)
        if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          poetry version $LAST_TAG

      - name: Build package
        run: |
          poetry build

      - name: Publish to PyPI (tagged)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PYPI_API_TOKEN : ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry config repositories.upload https://upload.pypi.org/legacy/
          poetry config pypi-token.upload $PYPI_API_TOKEN
          poetry publish -r upload -n --skip-existing

      - name: Publish to TestPyPI (main branch, not tag)
        if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        env:
          PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          poetry config repositories.test https://test.pypi.org/legacy/
          poetry config pypi-token.test $PYPI_API_TOKEN
          poetry publish -r test -n --skip-existing